version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: astro_telegram_bot
    restart: unless-stopped
    env_file:
      - .env # Передаем переменные
    volumes:
      # Монтируем важные данные и логи
      - ./astro_bot.db:/app/astro_bot.db
      - ./logs:/app/logs
      # Монтируем alembic/versions для сохранения миграций
      - ./alembic/versions:/app/alembic/versions
      # Опционально: монтируем статику/промпты, если меняете их часто без пересборки
      # - ./static:/app/static
      # - ./prompts:/app/prompts
    ports:
      # Проброс порта для Nginx (пример, если Nginx на хосте)
      # Если Nginx тоже в Docker, проброс не нужен, они будут в одной сети Docker
      - "127.0.0.1:${WEB_SERVER_PORT:-8443}:${WEB_SERVER_PORT:-8443}"
    # Сеть (если используется Nginx в другом контейнере)
    # networks:
    #   - botnet

# Сеть для взаимодействия контейнеров (если нужно)
# networks:
#   botnet:
#     driver: bridge

# Пример сервиса Nginx (если он тоже в Docker)
#   nginx:
#     image: nginx:latest
#     container_name: astro_bot_nginx
#     restart: unless-stopped
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Конфиг Nginx
#       - ./nginx/conf.d:/etc/nginx/conf.d:ro      # Конфиги сайтов
#       - ./certbot/conf:/etc/letsencrypt:ro         # Сертификаты Certbot
#       - ./certbot/www:/var/www/certbot:ro        # Для верификации Certbot
#     networks:
#       - botnet
#     depends_on:
#       - bot

# Пример сервиса Certbot (для автоматического получения сертификатов)
#   certbot:
#     image: certbot/certbot
#     container_name: astro_bot_certbot
#     volumes:
#       - ./certbot/conf:/etc/letsencrypt
#       - ./certbot/www:/var/www/certbot
#     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#     networks:
#       - botnet